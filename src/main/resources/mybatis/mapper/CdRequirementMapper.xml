<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.selfboot.chandao.dao.CdRequirementDAO" >
  <resultMap id="BaseResultMap" type="com.selfboot.chandao.domain.CdRequirement" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="begin" property="begin" jdbcType="DATE" />
    <result column="end" property="end" jdbcType="DATE" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="create_name" property="createName" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="closed_by" property="closedBy" jdbcType="BIGINT" />
    <result column="closed_name" property="closedName" jdbcType="VARCHAR" />
    <result column="closed_date" property="closedDate" jdbcType="TIMESTAMP" />
    <result column="canceled_by" property="canceledBy" jdbcType="BIGINT" />
    <result column="canceled_name" property="canceledName" jdbcType="VARCHAR" />
    <result column="canceled_date" property="canceledDate" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.selfboot.chandao.domain.CdRequirement" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_id, project_name, title, begin, end, status, create_by, create_name, 
    create_date, closed_by, closed_name, closed_date, canceled_by, canceled_name, canceled_date, 
    deleted
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>

  <sql id="where_fragment">
    WHERE 1 = 1
    <if test="entity != null">
      <if test="entity.createNameLike != null and entity.createNameLike != '' ">
        AND create_name like CONCAT('%',#{entity.createNameLike,jdbcType=CHAR},'%')
      </if>
      <if test="entity.projectNameLike != null and entity.projectNameLike != '' ">
        AND project_name like CONCAT('%',#{entity.projectNameLike,jdbcType=CHAR},'%')
      </if>
      <if test="entity.requireNameLike != null and entity.requireNameLike != '' ">
        AND title like CONCAT('%',#{entity.requireNameLike,jdbcType=CHAR},'%')
      </if>
      <if test="entity.status != null and entity.status != '' ">
        AND status = #{entity.status,jdbcType=INTEGER}
      </if>
      <if test="entity.id != null">
        AND id = #{entity.id,jdbcType=BIGINT}
      </if>
      <if test="entity.projectId != null">
        AND project_id = #{entity.projectId,jdbcType=BIGINT}
      </if>
      <if test="entity.statusList != null">
        AND status NOT IN
        <foreach collection="entity.statusList" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="entity.deleted != null">
        AND deleted = #{entity.deleted,jdbcType=INTEGER}
      </if>
    </if>
  </sql>

  <select id="selectListByCondition" resultMap="ResultMapWithBLOBs">
    SELECT
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List" />
    FROM cd_requirement
    <include refid="where_fragment"/>
  </select>

  <select id="selectListByProject" resultMap="ResultMapWithBLOBs">
    SELECT
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List" />
    FROM cd_requirement
    <include refid="where_fragment"/>
    <if test="userId != null">
      AND project_id in (
      SELECT
      project.id
      FROM cd_project project
      WHERE (project.create_by = #{userId,jdbcType=BIGINT} OR (SELECT COUNT(1) FROM cd_usergroup u_group
      WHERE u_group.user_id = #{userId,jdbcType=BIGINT} and u_group.group_id = project.group_id) > 0 )
      )
    </if>
  </select>

  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cd_requirement
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from cd_requirement
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.selfboot.chandao.domain.CdRequirement" >
    insert into cd_requirement (id, project_id, project_name, 
      title, begin, end, status, 
      create_by, create_name, create_date, 
      closed_by, closed_name, closed_date, 
      canceled_by, canceled_name, canceled_date, 
      deleted, description)
    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{projectName,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{begin,jdbcType=DATE}, #{end,jdbcType=DATE}, #{status,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=BIGINT}, #{createName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{closedBy,jdbcType=BIGINT}, #{closedName,jdbcType=VARCHAR}, #{closedDate,jdbcType=TIMESTAMP}, 
      #{canceledBy,jdbcType=BIGINT}, #{canceledName,jdbcType=VARCHAR}, #{canceledDate,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.selfboot.chandao.domain.CdRequirement" >
    insert into cd_requirement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="projectName != null" >
        project_name,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="begin != null" >
        begin,
      </if>
      <if test="end != null" >
        end,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createName != null" >
        create_name,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="closedBy != null" >
        closed_by,
      </if>
      <if test="closedName != null" >
        closed_name,
      </if>
      <if test="closedDate != null" >
        closed_date,
      </if>
      <if test="canceledBy != null" >
        canceled_by,
      </if>
      <if test="canceledName != null" >
        canceled_name,
      </if>
      <if test="canceledDate != null" >
        canceled_date,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="projectName != null" >
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="begin != null" >
        #{begin,jdbcType=DATE},
      </if>
      <if test="end != null" >
        #{end,jdbcType=DATE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createName != null" >
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="closedBy != null" >
        #{closedBy,jdbcType=BIGINT},
      </if>
      <if test="closedName != null" >
        #{closedName,jdbcType=VARCHAR},
      </if>
      <if test="closedDate != null" >
        #{closedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="canceledBy != null" >
        #{canceledBy,jdbcType=BIGINT},
      </if>
      <if test="canceledName != null" >
        #{canceledName,jdbcType=VARCHAR},
      </if>
      <if test="canceledDate != null" >
        #{canceledDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByProjectId" parameterType="com.selfboot.chandao.domain.CdRequirement" >
    update cd_requirement
    <set >
      <if test="projectName != null" >
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="begin != null" >
        begin = #{begin,jdbcType=DATE},
      </if>
      <if test="end != null" >
        end = #{end,jdbcType=DATE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createName != null" >
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="closedBy != null" >
        closed_by = #{closedBy,jdbcType=BIGINT},
      </if>
      <if test="closedName != null" >
        closed_name = #{closedName,jdbcType=VARCHAR},
      </if>
      <if test="closedDate != null" >
        closed_date = #{closedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="canceledBy != null" >
        canceled_by = #{canceledBy,jdbcType=BIGINT},
      </if>
      <if test="canceledName != null" >
        canceled_name = #{canceledName,jdbcType=VARCHAR},
      </if>
      <if test="canceledDate != null" >
        canceled_date = #{canceledDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where project_id = #{projectId,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.selfboot.chandao.domain.CdRequirement" >
    update cd_requirement
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="projectName != null" >
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="begin != null" >
        begin = #{begin,jdbcType=DATE},
      </if>
      <if test="end != null" >
        end = #{end,jdbcType=DATE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createName != null" >
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="closedBy != null" >
        closed_by = #{closedBy,jdbcType=BIGINT},
      </if>
      <if test="closedName != null" >
        closed_name = #{closedName,jdbcType=VARCHAR},
      </if>
      <if test="closedDate != null" >
        closed_date = #{closedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="canceledBy != null" >
        canceled_by = #{canceledBy,jdbcType=BIGINT},
      </if>
      <if test="canceledName != null" >
        canceled_name = #{canceledName,jdbcType=VARCHAR},
      </if>
      <if test="canceledDate != null" >
        canceled_date = #{canceledDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.selfboot.chandao.domain.CdRequirement" >
    update cd_requirement
    set project_id = #{projectId,jdbcType=BIGINT},
      project_name = #{projectName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      begin = #{begin,jdbcType=DATE},
      end = #{end,jdbcType=DATE},
      status = #{status,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      create_name = #{createName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      closed_by = #{closedBy,jdbcType=BIGINT},
      closed_name = #{closedName,jdbcType=VARCHAR},
      closed_date = #{closedDate,jdbcType=TIMESTAMP},
      canceled_by = #{canceledBy,jdbcType=BIGINT},
      canceled_name = #{canceledName,jdbcType=VARCHAR},
      canceled_date = #{canceledDate,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.selfboot.chandao.domain.CdRequirement" >
    update cd_requirement
    set project_id = #{projectId,jdbcType=BIGINT},
      project_name = #{projectName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      begin = #{begin,jdbcType=DATE},
      end = #{end,jdbcType=DATE},
      status = #{status,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      create_name = #{createName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      closed_by = #{closedBy,jdbcType=BIGINT},
      closed_name = #{closedName,jdbcType=VARCHAR},
      closed_date = #{closedDate,jdbcType=TIMESTAMP},
      canceled_by = #{canceledBy,jdbcType=BIGINT},
      canceled_name = #{canceledName,jdbcType=VARCHAR},
      canceled_date = #{canceledDate,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>